//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.269
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.269 版自动生成。
// 
#pragma warning disable 1591

namespace LocalControl.SenInformation {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CheckRockeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback BackupDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatDirectoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDirectoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback BottleAndBoxCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback PandXBangdingOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckUploadfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendProductSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback SenInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendZgProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback maxTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FileUpLoadOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaskTableNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetTaskFinishedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetColumnNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SPCZOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = "http://192.168.0.8:87/service1.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CheckRockeyCompletedEventHandler CheckRockeyCompleted;
        
        /// <remarks/>
        public event BackupDataCompletedEventHandler BackupDataCompleted;
        
        /// <remarks/>
        public event CreatDirectoryCompletedEventHandler CreatDirectoryCompleted;
        
        /// <remarks/>
        public event SaveFileCompletedEventHandler SaveFileCompleted;
        
        /// <remarks/>
        public event DeleteDirectoryCompletedEventHandler DeleteDirectoryCompleted;
        
        /// <remarks/>
        public event DeleteFileCompletedEventHandler DeleteFileCompleted;
        
        /// <remarks/>
        public event BottleAndBoxCodeCompletedEventHandler BottleAndBoxCodeCompleted;
        
        /// <remarks/>
        public event PandXBangdingCompletedEventHandler PandXBangdingCompleted;
        
        /// <remarks/>
        public event CheckUploadfileCompletedEventHandler CheckUploadfileCompleted;
        
        /// <remarks/>
        public event SendProductSetCompletedEventHandler SendProductSetCompleted;
        
        /// <remarks/>
        public event SenInformationCompletedEventHandler SenInformationCompleted;
        
        /// <remarks/>
        public event SendZgProductCompletedEventHandler SendZgProductCompleted;
        
        /// <remarks/>
        public event maxTimeCompletedEventHandler maxTimeCompleted;
        
        /// <remarks/>
        public event FileUpLoadCompletedEventHandler FileUpLoadCompleted;
        
        /// <remarks/>
        public event GetTaskCompletedEventHandler GetTaskCompleted;
        
        /// <remarks/>
        public event GetTaskTableNameCompletedEventHandler GetTaskTableNameCompleted;
        
        /// <remarks/>
        public event SetTaskFinishedCompletedEventHandler SetTaskFinishedCompleted;
        
        /// <remarks/>
        public event GetColumnNameCompletedEventHandler GetColumnNameCompleted;
        
        /// <remarks/>
        public event SPCZCompletedEventHandler SPCZCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckRockey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckRockey() {
            object[] results = this.Invoke("CheckRockey", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckRockey(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckRockey", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCheckRockey(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckRockeyAsync() {
            this.CheckRockeyAsync(null);
        }
        
        /// <remarks/>
        public void CheckRockeyAsync(object userState) {
            if ((this.CheckRockeyOperationCompleted == null)) {
                this.CheckRockeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckRockeyOperationCompleted);
            }
            this.InvokeAsync("CheckRockey", new object[0], this.CheckRockeyOperationCompleted, userState);
        }
        
        private void OnCheckRockeyOperationCompleted(object arg) {
            if ((this.CheckRockeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckRockeyCompleted(this, new CheckRockeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BackupData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int BackupData(string l_date, string filePath) {
            object[] results = this.Invoke("BackupData", new object[] {
                        l_date,
                        filePath});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBackupData(string l_date, string filePath, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BackupData", new object[] {
                        l_date,
                        filePath}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndBackupData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void BackupDataAsync(string l_date, string filePath) {
            this.BackupDataAsync(l_date, filePath, null);
        }
        
        /// <remarks/>
        public void BackupDataAsync(string l_date, string filePath, object userState) {
            if ((this.BackupDataOperationCompleted == null)) {
                this.BackupDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBackupDataOperationCompleted);
            }
            this.InvokeAsync("BackupData", new object[] {
                        l_date,
                        filePath}, this.BackupDataOperationCompleted, userState);
        }
        
        private void OnBackupDataOperationCompleted(object arg) {
            if ((this.BackupDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BackupDataCompleted(this, new BackupDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreatDirectory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreatDirectory(string path) {
            object[] results = this.Invoke("CreatDirectory", new object[] {
                        path});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreatDirectory(string path, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreatDirectory", new object[] {
                        path}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCreatDirectory(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreatDirectoryAsync(string path) {
            this.CreatDirectoryAsync(path, null);
        }
        
        /// <remarks/>
        public void CreatDirectoryAsync(string path, object userState) {
            if ((this.CreatDirectoryOperationCompleted == null)) {
                this.CreatDirectoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatDirectoryOperationCompleted);
            }
            this.InvokeAsync("CreatDirectory", new object[] {
                        path}, this.CreatDirectoryOperationCompleted, userState);
        }
        
        private void OnCreatDirectoryOperationCompleted(object arg) {
            if ((this.CreatDirectoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatDirectoryCompleted(this, new CreatDirectoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveFile(string path) {
            object[] results = this.Invoke("SaveFile", new object[] {
                        path});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveFile(string path, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveFile", new object[] {
                        path}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSaveFile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveFileAsync(string path) {
            this.SaveFileAsync(path, null);
        }
        
        /// <remarks/>
        public void SaveFileAsync(string path, object userState) {
            if ((this.SaveFileOperationCompleted == null)) {
                this.SaveFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveFileOperationCompleted);
            }
            this.InvokeAsync("SaveFile", new object[] {
                        path}, this.SaveFileOperationCompleted, userState);
        }
        
        private void OnSaveFileOperationCompleted(object arg) {
            if ((this.SaveFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveFileCompleted(this, new SaveFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteDirectory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteDirectory(string path) {
            object[] results = this.Invoke("DeleteDirectory", new object[] {
                        path});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteDirectory(string path, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteDirectory", new object[] {
                        path}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteDirectory(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDirectoryAsync(string path) {
            this.DeleteDirectoryAsync(path, null);
        }
        
        /// <remarks/>
        public void DeleteDirectoryAsync(string path, object userState) {
            if ((this.DeleteDirectoryOperationCompleted == null)) {
                this.DeleteDirectoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDirectoryOperationCompleted);
            }
            this.InvokeAsync("DeleteDirectory", new object[] {
                        path}, this.DeleteDirectoryOperationCompleted, userState);
        }
        
        private void OnDeleteDirectoryOperationCompleted(object arg) {
            if ((this.DeleteDirectoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDirectoryCompleted(this, new DeleteDirectoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteFile(string path) {
            object[] results = this.Invoke("DeleteFile", new object[] {
                        path});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteFile(string path, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteFile", new object[] {
                        path}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteFile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFileAsync(string path) {
            this.DeleteFileAsync(path, null);
        }
        
        /// <remarks/>
        public void DeleteFileAsync(string path, object userState) {
            if ((this.DeleteFileOperationCompleted == null)) {
                this.DeleteFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFileOperationCompleted);
            }
            this.InvokeAsync("DeleteFile", new object[] {
                        path}, this.DeleteFileOperationCompleted, userState);
        }
        
        private void OnDeleteFileOperationCompleted(object arg) {
            if ((this.DeleteFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFileCompleted(this, new DeleteFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BottleAndBoxCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BottleAndBoxCode(string code) {
            object[] results = this.Invoke("BottleAndBoxCode", new object[] {
                        code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBottleAndBoxCode(string code, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BottleAndBoxCode", new object[] {
                        code}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndBottleAndBoxCode(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BottleAndBoxCodeAsync(string code) {
            this.BottleAndBoxCodeAsync(code, null);
        }
        
        /// <remarks/>
        public void BottleAndBoxCodeAsync(string code, object userState) {
            if ((this.BottleAndBoxCodeOperationCompleted == null)) {
                this.BottleAndBoxCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBottleAndBoxCodeOperationCompleted);
            }
            this.InvokeAsync("BottleAndBoxCode", new object[] {
                        code}, this.BottleAndBoxCodeOperationCompleted, userState);
        }
        
        private void OnBottleAndBoxCodeOperationCompleted(object arg) {
            if ((this.BottleAndBoxCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BottleAndBoxCodeCompleted(this, new BottleAndBoxCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PandXBangding", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PandXBangding(string code) {
            object[] results = this.Invoke("PandXBangding", new object[] {
                        code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPandXBangding(string code, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PandXBangding", new object[] {
                        code}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndPandXBangding(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PandXBangdingAsync(string code) {
            this.PandXBangdingAsync(code, null);
        }
        
        /// <remarks/>
        public void PandXBangdingAsync(string code, object userState) {
            if ((this.PandXBangdingOperationCompleted == null)) {
                this.PandXBangdingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPandXBangdingOperationCompleted);
            }
            this.InvokeAsync("PandXBangding", new object[] {
                        code}, this.PandXBangdingOperationCompleted, userState);
        }
        
        private void OnPandXBangdingOperationCompleted(object arg) {
            if ((this.PandXBangdingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PandXBangdingCompleted(this, new PandXBangdingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckUploadfile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckUploadfile(string fname) {
            object[] results = this.Invoke("CheckUploadfile", new object[] {
                        fname});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckUploadfile(string fname, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckUploadfile", new object[] {
                        fname}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCheckUploadfile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckUploadfileAsync(string fname) {
            this.CheckUploadfileAsync(fname, null);
        }
        
        /// <remarks/>
        public void CheckUploadfileAsync(string fname, object userState) {
            if ((this.CheckUploadfileOperationCompleted == null)) {
                this.CheckUploadfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckUploadfileOperationCompleted);
            }
            this.InvokeAsync("CheckUploadfile", new object[] {
                        fname}, this.CheckUploadfileOperationCompleted, userState);
        }
        
        private void OnCheckUploadfileOperationCompleted(object arg) {
            if ((this.CheckUploadfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckUploadfileCompleted(this, new CheckUploadfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendProductSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SendProductSet() {
            object[] results = this.Invoke("SendProductSet", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSendProductSet(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SendProductSet", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSendProductSet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SendProductSetAsync() {
            this.SendProductSetAsync(null);
        }
        
        /// <remarks/>
        public void SendProductSetAsync(object userState) {
            if ((this.SendProductSetOperationCompleted == null)) {
                this.SendProductSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendProductSetOperationCompleted);
            }
            this.InvokeAsync("SendProductSet", new object[0], this.SendProductSetOperationCompleted, userState);
        }
        
        private void OnSendProductSetOperationCompleted(object arg) {
            if ((this.SendProductSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendProductSetCompleted(this, new SendProductSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SenInformation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SenInformation() {
            object[] results = this.Invoke("SenInformation", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSenInformation(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SenInformation", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSenInformation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SenInformationAsync() {
            this.SenInformationAsync(null);
        }
        
        /// <remarks/>
        public void SenInformationAsync(object userState) {
            if ((this.SenInformationOperationCompleted == null)) {
                this.SenInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSenInformationOperationCompleted);
            }
            this.InvokeAsync("SenInformation", new object[0], this.SenInformationOperationCompleted, userState);
        }
        
        private void OnSenInformationOperationCompleted(object arg) {
            if ((this.SenInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SenInformationCompleted(this, new SenInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendZgProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SendZgProduct() {
            object[] results = this.Invoke("SendZgProduct", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSendZgProduct(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SendZgProduct", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSendZgProduct(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SendZgProductAsync() {
            this.SendZgProductAsync(null);
        }
        
        /// <remarks/>
        public void SendZgProductAsync(object userState) {
            if ((this.SendZgProductOperationCompleted == null)) {
                this.SendZgProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendZgProductOperationCompleted);
            }
            this.InvokeAsync("SendZgProduct", new object[0], this.SendZgProductOperationCompleted, userState);
        }
        
        private void OnSendZgProductOperationCompleted(object arg) {
            if ((this.SendZgProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendZgProductCompleted(this, new SendZgProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/maxTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime maxTime() {
            object[] results = this.Invoke("maxTime", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginmaxTime(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("maxTime", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.DateTime EndmaxTime(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void maxTimeAsync() {
            this.maxTimeAsync(null);
        }
        
        /// <remarks/>
        public void maxTimeAsync(object userState) {
            if ((this.maxTimeOperationCompleted == null)) {
                this.maxTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmaxTimeOperationCompleted);
            }
            this.InvokeAsync("maxTime", new object[0], this.maxTimeOperationCompleted, userState);
        }
        
        private void OnmaxTimeOperationCompleted(object arg) {
            if ((this.maxTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.maxTimeCompleted(this, new maxTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FileUpLoad", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FileUpLoad([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] by, string fName, string type) {
            object[] results = this.Invoke("FileUpLoad", new object[] {
                        by,
                        fName,
                        type});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFileUpLoad(byte[] by, string fName, string type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FileUpLoad", new object[] {
                        by,
                        fName,
                        type}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndFileUpLoad(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FileUpLoadAsync(byte[] by, string fName, string type) {
            this.FileUpLoadAsync(by, fName, type, null);
        }
        
        /// <remarks/>
        public void FileUpLoadAsync(byte[] by, string fName, string type, object userState) {
            if ((this.FileUpLoadOperationCompleted == null)) {
                this.FileUpLoadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFileUpLoadOperationCompleted);
            }
            this.InvokeAsync("FileUpLoad", new object[] {
                        by,
                        fName,
                        type}, this.FileUpLoadOperationCompleted, userState);
        }
        
        private void OnFileUpLoadOperationCompleted(object arg) {
            if ((this.FileUpLoadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FileUpLoadCompleted(this, new FileUpLoadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTask(string deviceid) {
            object[] results = this.Invoke("GetTask", new object[] {
                        deviceid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTask(string deviceid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTask", new object[] {
                        deviceid}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTask(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskAsync(string deviceid) {
            this.GetTaskAsync(deviceid, null);
        }
        
        /// <remarks/>
        public void GetTaskAsync(string deviceid, object userState) {
            if ((this.GetTaskOperationCompleted == null)) {
                this.GetTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskOperationCompleted);
            }
            this.InvokeAsync("GetTask", new object[] {
                        deviceid}, this.GetTaskOperationCompleted, userState);
        }
        
        private void OnGetTaskOperationCompleted(object arg) {
            if ((this.GetTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskCompleted(this, new GetTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTaskTableName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTaskTableName() {
            object[] results = this.Invoke("GetTaskTableName", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTaskTableName(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTaskTableName", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetTaskTableName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskTableNameAsync() {
            this.GetTaskTableNameAsync(null);
        }
        
        /// <remarks/>
        public void GetTaskTableNameAsync(object userState) {
            if ((this.GetTaskTableNameOperationCompleted == null)) {
                this.GetTaskTableNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskTableNameOperationCompleted);
            }
            this.InvokeAsync("GetTaskTableName", new object[0], this.GetTaskTableNameOperationCompleted, userState);
        }
        
        private void OnGetTaskTableNameOperationCompleted(object arg) {
            if ((this.GetTaskTableNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskTableNameCompleted(this, new GetTaskTableNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetTaskFinished", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetTaskFinished(int id_flag) {
            object[] results = this.Invoke("SetTaskFinished", new object[] {
                        id_flag});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetTaskFinished(int id_flag, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetTaskFinished", new object[] {
                        id_flag}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSetTaskFinished(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetTaskFinishedAsync(int id_flag) {
            this.SetTaskFinishedAsync(id_flag, null);
        }
        
        /// <remarks/>
        public void SetTaskFinishedAsync(int id_flag, object userState) {
            if ((this.SetTaskFinishedOperationCompleted == null)) {
                this.SetTaskFinishedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTaskFinishedOperationCompleted);
            }
            this.InvokeAsync("SetTaskFinished", new object[] {
                        id_flag}, this.SetTaskFinishedOperationCompleted, userState);
        }
        
        private void OnSetTaskFinishedOperationCompleted(object arg) {
            if ((this.SetTaskFinishedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTaskFinishedCompleted(this, new SetTaskFinishedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetColumnName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetColumnName() {
            object[] results = this.Invoke("GetColumnName", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetColumnName(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetColumnName", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetColumnName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetColumnNameAsync() {
            this.GetColumnNameAsync(null);
        }
        
        /// <remarks/>
        public void GetColumnNameAsync(object userState) {
            if ((this.GetColumnNameOperationCompleted == null)) {
                this.GetColumnNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetColumnNameOperationCompleted);
            }
            this.InvokeAsync("GetColumnName", new object[0], this.GetColumnNameOperationCompleted, userState);
        }
        
        private void OnGetColumnNameOperationCompleted(object arg) {
            if ((this.GetColumnNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetColumnNameCompleted(this, new GetColumnNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SPCZ", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SPCZ(string boxCode, string bList, string productName) {
            object[] results = this.Invoke("SPCZ", new object[] {
                        boxCode,
                        bList,
                        productName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSPCZ(string boxCode, string bList, string productName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SPCZ", new object[] {
                        boxCode,
                        bList,
                        productName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSPCZ(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SPCZAsync(string boxCode, string bList, string productName) {
            this.SPCZAsync(boxCode, bList, productName, null);
        }
        
        /// <remarks/>
        public void SPCZAsync(string boxCode, string bList, string productName, object userState) {
            if ((this.SPCZOperationCompleted == null)) {
                this.SPCZOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSPCZOperationCompleted);
            }
            this.InvokeAsync("SPCZ", new object[] {
                        boxCode,
                        bList,
                        productName}, this.SPCZOperationCompleted, userState);
        }
        
        private void OnSPCZOperationCompleted(object arg) {
            if ((this.SPCZCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SPCZCompleted(this, new SPCZCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CheckRockeyCompletedEventHandler(object sender, CheckRockeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckRockeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckRockeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BackupDataCompletedEventHandler(object sender, BackupDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BackupDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BackupDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreatDirectoryCompletedEventHandler(object sender, CreatDirectoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatDirectoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatDirectoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveFileCompletedEventHandler(object sender, SaveFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteDirectoryCompletedEventHandler(object sender, DeleteDirectoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDirectoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDirectoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteFileCompletedEventHandler(object sender, DeleteFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BottleAndBoxCodeCompletedEventHandler(object sender, BottleAndBoxCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BottleAndBoxCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BottleAndBoxCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PandXBangdingCompletedEventHandler(object sender, PandXBangdingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PandXBangdingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PandXBangdingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CheckUploadfileCompletedEventHandler(object sender, CheckUploadfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckUploadfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckUploadfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendProductSetCompletedEventHandler(object sender, SendProductSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendProductSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendProductSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SenInformationCompletedEventHandler(object sender, SenInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SenInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SenInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendZgProductCompletedEventHandler(object sender, SendZgProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendZgProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendZgProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void maxTimeCompletedEventHandler(object sender, maxTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class maxTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal maxTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void FileUpLoadCompletedEventHandler(object sender, FileUpLoadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FileUpLoadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FileUpLoadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTaskCompletedEventHandler(object sender, GetTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTaskTableNameCompletedEventHandler(object sender, GetTaskTableNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaskTableNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaskTableNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetTaskFinishedCompletedEventHandler(object sender, SetTaskFinishedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetTaskFinishedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetTaskFinishedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetColumnNameCompletedEventHandler(object sender, GetColumnNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetColumnNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetColumnNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SPCZCompletedEventHandler(object sender, SPCZCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SPCZCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SPCZCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591